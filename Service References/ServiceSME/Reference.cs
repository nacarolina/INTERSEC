//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GwCentral.ServiceSME {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Local", Namespace="http://schemas.datacontract.org/2004/07/MyService")]
    [System.SerializableAttribute()]
    public partial class Local : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsorcioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsorcioIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string enderecoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Consorcio {
            get {
                return this.ConsorcioField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsorcioField, value) != true)) {
                    this.ConsorcioField = value;
                    this.RaisePropertyChanged("Consorcio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsorcioId {
            get {
                return this.ConsorcioIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsorcioIdField, value) != true)) {
                    this.ConsorcioIdField = value;
                    this.RaisePropertyChanged("ConsorcioId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string endereco {
            get {
                return this.enderecoField;
            }
            set {
                if ((object.ReferenceEquals(this.enderecoField, value) != true)) {
                    this.enderecoField = value;
                    this.RaisePropertyChanged("endereco");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceSME.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataHoraServer", ReplyAction="http://tempuri.org/IService/GetDataHoraServerResponse")]
        string GetDataHoraServer(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataHoraServer", ReplyAction="http://tempuri.org/IService/GetDataHoraServerResponse")]
        System.Threading.Tasks.Task<string> GetDataHoraServerAsync(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PostExecuteReaderQuery", ReplyAction="http://tempuri.org/IService/PostExecuteReaderQueryResponse")]
        string PostExecuteReaderQuery(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PostExecuteReaderQuery", ReplyAction="http://tempuri.org/IService/PostExecuteReaderQueryResponse")]
        System.Threading.Tasks.Task<string> PostExecuteReaderQueryAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetExecuteReaderQuery", ReplyAction="http://tempuri.org/IService/GetExecuteReaderQueryResponse")]
        string GetExecuteReaderQuery(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetExecuteReaderQuery", ReplyAction="http://tempuri.org/IService/GetExecuteReaderQueryResponse")]
        System.Threading.Tasks.Task<string> GetExecuteReaderQueryAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SoapExecuteReaderQuery", ReplyAction="http://tempuri.org/IService/SoapExecuteReaderQueryResponse")]
        System.Data.DataTable SoapExecuteReaderQuery(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SoapExecuteReaderQuery", ReplyAction="http://tempuri.org/IService/SoapExecuteReaderQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SoapExecuteReaderQueryAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLocalXml", ReplyAction="http://tempuri.org/IService/GetLocalXmlResponse")]
        GwCentral.ServiceSME.Local GetLocalXml(string idLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLocalXml", ReplyAction="http://tempuri.org/IService/GetLocalXmlResponse")]
        System.Threading.Tasks.Task<GwCentral.ServiceSME.Local> GetLocalXmlAsync(string idLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLocalJson", ReplyAction="http://tempuri.org/IService/GetLocalJsonResponse")]
        GwCentral.ServiceSME.Local GetLocalJson(string idLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLocalJson", ReplyAction="http://tempuri.org/IService/GetLocalJsonResponse")]
        System.Threading.Tasks.Task<GwCentral.ServiceSME.Local> GetLocalJsonAsync(string idLocal);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : GwCentral.ServiceSME.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<GwCentral.ServiceSME.IService>, GwCentral.ServiceSME.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetDataHoraServer(string msg) {
            return base.Channel.GetDataHoraServer(msg);
        }
        
        public System.Threading.Tasks.Task<string> GetDataHoraServerAsync(string msg) {
            return base.Channel.GetDataHoraServerAsync(msg);
        }
        
        public string PostExecuteReaderQuery(string sql) {
            return base.Channel.PostExecuteReaderQuery(sql);
        }
        
        public System.Threading.Tasks.Task<string> PostExecuteReaderQueryAsync(string sql) {
            return base.Channel.PostExecuteReaderQueryAsync(sql);
        }
        
        public string GetExecuteReaderQuery(string sql) {
            return base.Channel.GetExecuteReaderQuery(sql);
        }
        
        public System.Threading.Tasks.Task<string> GetExecuteReaderQueryAsync(string sql) {
            return base.Channel.GetExecuteReaderQueryAsync(sql);
        }
        
        public System.Data.DataTable SoapExecuteReaderQuery(string sql) {
            return base.Channel.SoapExecuteReaderQuery(sql);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SoapExecuteReaderQueryAsync(string sql) {
            return base.Channel.SoapExecuteReaderQueryAsync(sql);
        }
        
        public GwCentral.ServiceSME.Local GetLocalXml(string idLocal) {
            return base.Channel.GetLocalXml(idLocal);
        }
        
        public System.Threading.Tasks.Task<GwCentral.ServiceSME.Local> GetLocalXmlAsync(string idLocal) {
            return base.Channel.GetLocalXmlAsync(idLocal);
        }
        
        public GwCentral.ServiceSME.Local GetLocalJson(string idLocal) {
            return base.Channel.GetLocalJson(idLocal);
        }
        
        public System.Threading.Tasks.Task<GwCentral.ServiceSME.Local> GetLocalJsonAsync(string idLocal) {
            return base.Channel.GetLocalJsonAsync(idLocal);
        }
    }
}
